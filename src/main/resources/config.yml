storage:
  # Possible storage types: FILE:JSON, FILE:YAML, MYSQL, SQLITE, H2. If using H2 or SQLITE, make sure to set max-pool-size to 1!
  type: 'FILE:JSON'

  # FILE only: when set to true, the data will be written to disk every time a toggle happens.
  # THIS CAN BE VERY INEFFICIENT, especially on larger servers.
  # When on false, file only gets saved when server shuts down (data can get lost with f.e. crashes)
  save-per-change: false

  # The hostname (IP) to connect to
  hostname: '127.0.0.1'
  # Port to be used
  port: 3306
  # The database / scheme name
  database: 'database'
  # The username, should at least have write & read access to the database above!
  username: 'username'
  # The password corresponding to the username above
  password: 'password'
  # Should WheelOfFortune try to establish a SSL connection? (only for SQL)
  useSSL: true

  pool:
    # How many connections are allowed to be made?
    # Find more information at:
    # https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
    # Pool sizing SHOULD BE SET TO 1 WHEN USING H2 OR SQLITE
    max-pool-size: 5
    # How many idle connections should be maintained?
    # It is recommended to set this to the same value as the max-pool-size
    min-idle: 5
    # Maximum lifetime of a connection. Time in seconds.
    max-lifetime: 1500
    # How long should WheelOfFortune wait before timing out a connection?
    connection-timeout: 8

wheel:
  type: HOLOGRAM
  height: 25
  width: 25
  # this should NEVER be higher then 15 (as there are only 15 colors)
  sectors: 12

  # The sector that is the winning sector, 2 is recommended for hologram.
  winning-sector: 2

  # Amount of seconds until the wheel starts spinning after executing the command.
  delay: 10

  hologram:
    icon: '█'

    header:
      - '&4▇▇▇    '
      - '&4▇    '
      - ''
    footer:
      - ''
      - '&eYou can spin this wheel to possibly get some nice rewards,'
      - '&ebut beware! This wheel can have some &cdangerous tendencies&e!'
      - ''
      - '&b&lLegenda:'
      - '&e█ Changes World Difficulty   &r-   &b█ Nobody knows o_O'

  block:
    # Possible types: TERRACOTTA, WOOL, STAINED_GLASS, CONCRETE, GLAZED_TERRACOTTA
    type: 'TERRACOTTA'

sounds:
  tick: 'BLOCK_NOTE_BLOCK_PLING'
  finish: 'ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR'

messages:
  prefix: '&c&lWheelOfFortune &8» '

  not-for-console: '&eThe console cannot execute this command.'
  wheel:
    no-wheel: '&eThere is no wheel that can be started! &bPlease contact an administrator for this.'
    starting:
      starting: '&eThe wheel of danger will now start.'
      default: '&e{timer} ...'
      '10': '&eThe wheel of danger will start in &b10 seconds&e.'
      '9': ''
      '8': ''
      '7': ''
      '6': ''
    no-event: '&eThe wheel of danger ended on nothing this time around ...'
    event: '&eThe wheel of danger ended on {color} &ewith &b{eventName}&e.'

  admin:
    reloaded: '&eConfiguration file and event scripts have been reloaded.'
    location-set: '&eThe danger wheel location has been set!'
    error: '&cAn error occured, please &4check the console &cfor more info!'

  optin: '&eYou are now opting into the &bWheelOfFortune events&e!'
  optout: '&eYou are now opting out of the &bWheelOfFortune events&e!'

# Every color that does not have an event bound to it will have a random event from this list.
events:
  - name: 'Change World Difficulty'
    script: 'changediff.js'
    # List of available colors can be found at:
    # https://git.dbsoftwares.eu/dbsoftwares/fortunewheel/blob/master/src/main/java/com/dbsoftwares/wheeloffortune/utils/objects/CircleColor.java
    color: 'YELLOW'